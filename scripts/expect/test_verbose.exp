#!/usr/bin/expect -f
set timeout 600
set log_file [open "test_results/test_verbose.log" w]

# Set default test result in case of unexpected exit
set test_result "FAIL"

spawn python scancompare nginx:latest --verbose --mock-yes

# First, look for the mock-yes message
expect {
  "Automatically selecting 'yes'" {
    puts $log_file "VERBOSE TEST: Started correctly with mock-yes"
  }
  timeout {
    puts $log_file "VERBOSE TEST: FAIL - Command timed out at start"
    set test_result "FAIL"
    close $log_file
    
    # Write fail result to results file
    set results_file [open "test_results/test_verbose_result.txt" w]
    puts $results_file $test_result
    close $results_file
    exit
  }
}

# The verbose flag should show more output, look for detailed scan information
expect {
  "Found " {
    puts $log_file "VERBOSE TEST: PASS - Verbose output detected"
    set test_result "PASS"
  }
  "using repo name" {
    puts $log_file "VERBOSE TEST: PASS - Verbose output detected"
    set test_result "PASS"
  }
  "Contents of" {
    puts $log_file "VERBOSE TEST: PASS - Verbose output detected"
    set test_result "PASS"
  }
  "scan file paths" {
    puts $log_file "VERBOSE TEST: PASS - Verbose output detected"
    set test_result "PASS"
  }
  "Keys: " {
    puts $log_file "VERBOSE TEST: PASS - Verbose output detected"
    set test_result "PASS"
  }
  "Local HTML report saved" {
    # If we reach the end without seeing verbose output but scan completed
    puts $log_file "VERBOSE TEST: PASS - Scan completed successfully with verbose flag"
    set test_result "PASS"
  }
  timeout {
    puts $log_file "VERBOSE TEST: FAIL - Scan timed out waiting for verbose output"
    set test_result "FAIL"
  }
  eof {
    # Only if we've already set the test_result to PASS previously
    if {$test_result == "PASS"} {
      puts $log_file "VERBOSE TEST: PASS - Process completed after detecting verbose output"
    } else {
      puts $log_file "VERBOSE TEST: FAIL - Process ended without detecting verbose output"
      set test_result "FAIL"
    }
  }
}

puts $log_file "Test result: $test_result"
close $log_file

# Write result to results file
set results_file [open "test_results/test_verbose_result.txt" w]
puts $results_file $test_result
close $results_file