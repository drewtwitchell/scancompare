name: Scancompare Test Suite

on:
  push:
    branches: [ main, develop, 'release-*' ]
  pull_request:
    branches: [ main, develop, 'release-*' ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Install dependencies directly
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
          
          # Install Python dependencies
          pip install jinja2 requests

      # Install Trivy and Grype
      - name: Install Trivy and Grype
        run: |
          # Install Trivy
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.42.0
          trivy --version
          
          # Install Grype
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
          grype --version

      - name: Set up Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo systemctl start docker

      # Create necessary directories that the script expects
      - name: Set up directory structure
        run: |
          mkdir -p ~/ScanCompare/scan_reports
          mkdir -p ~/ScanCompare/temp
          mkdir -p ~/ScanCompare/backups
          mkdir -p ~/ScanCompare/temp/gh-pages
          mkdir -p ~/ScanCompare/temp/docker

      # Verify scancompare has automation flags
      - name: Verify scancompare arguments
        run: |
          # Make the script executable
          chmod +x ./scancompare
          
          # Check script for automation flags
          ./scancompare --help
          ./scancompare --help | grep -E -- "--auto|--mock-yes|--mock-no" || (echo "Automation flags not found in scancompare" && exit 1)

      # Test automation flags with direct script execution
      - name: Test automation flags
        run: |
          echo "Auto mode: Standard scan"
          ./scancompare nginx:latest --auto || echo "Test failed"
          
          echo "Mock Yes: Standard scan"
          ./scancompare nginx:latest --mock-yes || echo "Test failed"
          
          echo "Mock No: Standard scan"  
          ./scancompare nginx:latest --mock-no || echo "Test failed"

      # Test with repository URL
      - name: Test with repository URL
        run: |
          echo "Auto mode: Repo scan"
          ./scancompare --repo-url https://github.com/docker-library/hello-world --auto || echo "Test failed"

      # Test multiple flags combinations
      - name: Test multiple flag combinations
        run: |
          echo "Multiple flags test"
          ./scancompare nginx:latest --verbose --auto || echo "Test failed"
          ./scancompare nginx:latest --keep-data --auto || echo "Test failed"

      # Test multiple automation flags (should fail)
      - name: Test multiple automation flags
        run: |
          echo "Multiple automation flags test (should fail)"
          ./scancompare nginx:latest --auto --mock-yes && echo "FAIL: Multiple flags not handled correctly" || echo "PASS: Multiple flags correctly rejected"

      # Test utility commands
      - name: Test utility commands
        run: |
          echo "Version check"
          ./scancompare --version || echo "Test failed"